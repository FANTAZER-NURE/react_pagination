{"version":3,"sources":["components/Pagination/Pagination.tsx","components/Pagination/ItemList.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","itemsPerPage","totalItems","paginate","nextPage","prevPage","currentPage","useState","activeItem","setActiveItem","pageNumbers","i","Math","ceil","push","className","classNames","disabled","href","onClick","map","num","active","ItemList","items","item","itemsFromServer","from","to","numbers","n","getNumbers","App","setCurrentPage","setItemsPerPage","lastItemIndex","firstItemIndex","currentItems","slice","replace","length","id","value","onChange","e","currentTarget","htmlFor","pageNumber","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.583521b0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useState } from 'react';\n\ntype Props = {\n  itemsPerPage: number,\n  totalItems: number,\n  paginate: (arg:number) => void,\n  nextPage: () => void,\n  prevPage: () => void,\n  currentPage: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  itemsPerPage,\n  totalItems,\n  paginate,\n  nextPage,\n  prevPage,\n  currentPage,\n}) => {\n  const [activeItem, setActiveItem] = useState(1);\n\n  const pageNumbers = [];\n\n  for (let i = 1; i <= (Math.ceil(totalItems / itemsPerPage)); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              prevPage();\n              setActiveItem(activeItem - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(num => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: num === activeItem },\n            )}\n            key={num}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${num}`}\n              onClick={() => {\n                paginate(num);\n                setActiveItem(num);\n              }}\n            >\n              {num}\n            </a>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === Math.ceil(totalItems / itemsPerPage) },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={Math.ceil(totalItems / itemsPerPage) === currentPage}\n            onClick={() => {\n              nextPage();\n              setActiveItem(activeItem + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","type Props = {\n  items: string[],\n};\n\nexport const ItemList:React.FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { ItemList } from './components/Pagination/ItemList';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst itemsFromServer = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [items] = useState(itemsFromServer);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const lastItemIndex = currentPage * itemsPerPage;\n  const firstItemIndex = lastItemIndex - itemsPerPage;\n\n  const currentItems = items.slice(firstItemIndex, lastItemIndex);\n\n  const paginate = (pageNumber:number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage < (items.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items\n          ${currentItems[0].replace('Item ', '')} -\n          ${currentItems[currentItems.length - 1].replace('Item ', '')}\n          of\n          ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(e) => {\n              setItemsPerPage(+e.currentTarget.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <ItemList items={currentItems} />\n      <Pagination\n        itemsPerPage={itemsPerPage}\n        totalItems={items.length}\n        paginate={paginate}\n        nextPage={nextPage}\n        prevPage={prevPage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}